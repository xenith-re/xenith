---
- name: Add APT source URIs
  ansible.builtin.apt_repository:
    repo: "deb-src http://httpredir.debian.org/debian bookworm main"
    state: present
    update_cache: true

- name: Install Xen build tools dependencies
  ansible.builtin.apt:
    name: build-essential
    state: present

- name: Install Xen build dependencies
  ansible.builtin.package:
    name: "{{ item }}"
  with_items:
    - bcc
    - bin86
    - gawk
    - bridge-utils
    - libcurl4-openssl-dev
    - bzip2
    - transfig
    - tgif
    - texinfo
    - texlive-latex-base
    - texlive-latex-recommended
    - texlive-fonts-extra
    - texlive-fonts-recommended
    - libpci-dev
    - git
    - make
    - gcc
    - libc6-dev
    - zlib1g-dev
    - python3
    - python3-dev
    - python3-twisted
    - libncurses5-dev
    - patch
    - libvncserver-dev
    - libjpeg62-turbo-dev
    - iasl
    - libbz2-dev
    - e2fslibs-dev
    - git-core
    - uuid-dev
    - ocaml
    - ocaml-findlib
    - libx11-dev
    - bison
    - flex
    - xz-utils
    - libyajl-dev
    - gettext
    - libpixman-1-dev
    - libaio-dev
    - markdown
    - pandoc

- name: Configure Xen
  ansible.builtin.command: |
    ./configure \
      --prefix=/usr \
      --libdir=/usr/local/lib64 \
      --enable-systemd \
      --enable-stubdom \
      --disable-xenstorepvh-stubdom
  args:
    chdir: "{{ xen.source_path }}"
  become: false
  register: configure_xen
  changed_when: false
  failed_when: configure_xen.rc != 0

- name: Get number of processors
  ansible.builtin.shell: "echo $(($(nproc)-2))" # -2 to leave some CPU for the host
  register: nproc
  changed_when: false
  failed_when: nproc.rc != 0

- name: Build Xen
  ansible.builtin.command: make dist -j{{ nproc.stdout }}
  args:
    chdir: "{{ xen.source_path }}"
  become: true
  register: build_xen
  changed_when: false
  failed_when: build_xen.rc != 0

- name: Install Xen
  ansible.builtin.command: make install -j{{ nproc.stdout }}
  args:
    chdir: "{{ xen.source_path }}"
  become: true
  register: install_xen
  changed_when: false
  failed_when: install_xen.rc != 0

- name: Create /etc/ld.so.conf.d/xen.conf with the specified content
  become: true
  ansible.builtin.copy:
    dest: /etc/ld.so.conf.d/xen.conf
    content: "/usr/local/lib64"
    mode: "0640"
    owner: root
    group: root

- name: Rebuild dynamic linker cache
  ansible.builtin.command: /sbin/ldconfig
  register: ldconfig
  changed_when: false
  failed_when: ldconfig.rc != 0

# - Boot on Xen kernel by default
# - Configure Xen dom0
# - Enable EPT and other features
- name: Copy xen.cfg to /etc/default/grub.d/xen.cfg
  ansible.builtin.copy:
    src: files/xen.cfg
    dest: /etc/default/grub.d/xen.cfg
    mode: "0640"
    owner: root
    group: root

- name: Configure default CPU pool
  ansible.builtin.copy:
    src: files/cpupool.cfg
    dest: /etc/xen/cpupool
    mode: "0640"
    owner: root
    group: root

- name: Update GRUB
  ansible.builtin.command: update-grub
  register: update_grub
  changed_when: false
  failed_when: update_grub.rc != 0

- name: Enable Xen system services
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
  with_items:
    # Required
    - xen-init-dom0.service
    - xen-qemu-dom0-disk-backend.service
    - xenconsoled.service
    # Optional
    - xendomains.service
    - xenstored.service
